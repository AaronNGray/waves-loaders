!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var o;"undefined"!=typeof window?o=window:"undefined"!=typeof global?o=global:"undefined"!=typeof self&&(o=self),o.BufferLoader=e()}}(function(){return function e(o,t,r){function n(u,f){if(!t[u]){if(!o[u]){var a="function"==typeof require&&require;if(!f&&a)return a(u,!0);if(i)return i(u,!0);throw new Error("Cannot find module '"+u+"'")}var d=t[u]={exports:{}};o[u][0].call(d.exports,function(e){var t=o[u][1][e];return n(t?t:e)},d,d.exports,e,o,t,r)}return t[u].exports}for(var i="function"==typeof require&&require,u=0;u<r.length;u++)n(r[u]);return n}({1:[function(e,o){"use strict";window.audioContext=window.audioContext||new AudioContext||new webkitAudioContext;var t=function(){function e(){this.progressCb=void 0}function o(){return this.progressCb}function t(e){this.progressCb=e}var r=Object.defineProperty;return Object.defineProperties(e.prototype,{progressCallback:{get:o,set:t,configurable:!0,enumerable:!0}}),r(e,"prototype",{configurable:!1,enumerable:!1,writable:!1}),e.prototype.load=function(e){return Array.isArray(e)?this.loadAll(e):this.loadBuffer(e)},e.prototype.loadBuffer=function(e){return this.fileLoadingRequest(e).then(this.decodeAudioData,function(e){throw e})},e.prototype.loadAll=function(e){for(var o=e.length,t=[],r=this,n=0;o>n;++n)t.push(this.fileLoadingRequest(e[n],n));return Promise.all(t).then(function(e){return Promise.all(e.map(function(e){return r.decodeAudioData(e)}))},function(e){throw e})},e.prototype.fileLoadingRequest=function(e,o){var t=this,r=new Promise(function(r,n){var i=new XMLHttpRequest;i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=function(){200===i.status||304===i.status?r(i.response):n(new Error(i.statusText))},i.onprogress=function(e){t.progressCallback&&t.progressCallback(void 0!==o?{index:o,value:e.loaded/e.total}:e.loaded/e.total)},i.onerror=function(){n(new Error("Network Error"))},i.send()});return r},e.prototype.decodeAudioData=function(e){var o=new Promise(function(o,t){window.audioContext.decodeAudioData(e,function(e){o(e)},function(){t(new Error("DecodeAudioData error"))})});return o},e}();o.exports=t},{}]},{},[1])(1)});